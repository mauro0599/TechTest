@page "/login"

@using ProductosApp.Client.Services;
@using ProductosApp.Shared.Models;

@inject IAuthService AuthService
@inject NavigationManager NavigationManager
<div class="d-flex justify-content-center">
    <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Info">Iniciar Sesión</MudText>
</div>
<br />
@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<MudContainer>
    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Email"
                                      @bind-Value="loginModel.Email" For="@(() => loginModel.Email)" />
                        <MudTextField InputType="InputType.Password" Label="Contraseña" Class="mt-3"
                                      @bind-Value="loginModel.Password" For="@(() => loginModel.Password)" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Iniciar</MudButton>
                        <MudButton ButtonType="ButtonType.Button" Href="/" Variant="Variant.Filled" Color="Color.Info" Class="ml-4">Volver</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12">
                <MudText Typo="Typo.body2" Align="Align.Center">

                </MudText>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudContainer>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error!;
            ShowErrors = true;
        }
    }

}