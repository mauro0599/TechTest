@page "/productos"

@using BlazorCrud.Shared;
@using CurrieTechnologies.Razor.SweetAlert2;
@using BlazorCrud.Client.Services;
@using Microsoft.AspNetCore.Authorization;

@inject SweetAlertService Swal;
@inject IProductoService productoService;
@attribute [Authorize]

<h3>Productos</h3>
<a class="btn btn-success btn-sm mb-3" href="producto">Nuevo Producto</a>

<MudTable Items="@listaProducto">

    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Nombre</MudTh>
        <MudTh>Descripcion</MudTh>
        <MudTh>Precio</MudTh>
        <MudTh>Foto</MudTh>
        <MudTh>Acciones</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="id">@context.IdProducto</MudTd>
        <MudTd DataLabel="Name">@context.Modelo</MudTd>
        <MudTd DataLabel="Description">@context.Descripcion</MudTd>
        <MudTd DataLabel="Price">@context.Precio</MudTd>
        <MudTd DataLabel="Photo"><MudImage Src="@context.Foto" Width="40" Height="40" Elevation="0" Class="rounded-lg" /></MudTd>
        <MudTd Class="pa-4 mt-4" DataLabel="Actions">
            <MudButton Variant="Variant.Filled" Color="Color.Info" DisableElevation="true" Href="@($"producto/{context.IdProducto}")">
                <i class="oi oi-pencil"></i>
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" DisableElevation="true" OnClick="@(()=>Eliminar(@context.IdProducto))">
                <i class="oi oi-trash"></i>
            </MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
@code {
    List<ProductoDTO>? listaProducto = null;

    protected override async Task OnInitializedAsync()
    {
        listaProducto = await productoService.Lista();
    }

    private async Task Eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar producto",
                Text = "Deseas eliminar el producto?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });
        if (resultado.IsConfirmed)
        {
            var eliminado = await productoService.Eliminar(id);
            if (eliminado)
            {
                listaProducto = listaProducto!.FindAll(x => x.IdProducto != id);
            }
        }
    }

}
